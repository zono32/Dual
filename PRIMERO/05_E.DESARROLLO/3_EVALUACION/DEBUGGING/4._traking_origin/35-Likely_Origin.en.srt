A continuación se presenta la traducción al castellano del texto siguiendo el mismo formato:

1
00:00:00,000 --> 00:00:04,000
Incluso si tienes dependencias y aserciones

2
00:00:04,000 --> 00:00:07,000
que te ayuden a descartar grandes partes del estado,

3
00:00:07,000 --> 00:00:13,000
aún podrías terminar con una multitud de orígenes individuales

4
00:00:13,000 --> 00:00:17,000
de donde puede provenir una infección específica.

5
00:00:17,000 --> 00:00:21,000
Aunque puedes descartarlos uno tras otro usando el método científico,

6
00:00:21,000 --> 00:00:26,000
la pregunta es a qué orígenes vas a mirar primero.

7
00:00:26,000 --> 00:00:29,000
La idea es mirar primero los orígenes más probables.

8
00:00:29,000 --> 00:00:33,000
La pregunta es, ¿qué es un origen probable?

9
00:00:33,000 --> 00:00:36,000
¿Qué posible origen debo mirar primero?

10
00:00:36,000 --> 00:00:39,000
Aquí tienes algunas pautas: Primero y ante todo, infecciones.

11
00:00:39,000 --> 00:00:42,000
Si sabes que algún origen está mal, ve por él.

12
00:00:42,000 --> 00:00:44,000
Lo siguiente son las causas.

13
00:00:44,000 --> 00:00:47,000
Si sabes que algún estado causa la falla,

14
00:00:47,000 --> 00:00:49,000
porque puedes cambiarlo a otro valor,

15
00:00:49,000 --> 00:00:51,000
si la falla desaparece,

16
00:00:51,000 --> 00:00:54,000
lo cual es algo que puedes averiguar mediante la depuración delta, por ejemplo,

17
00:00:54,000 --> 00:00:56,000
síguelo.

18
00:00:56,000 --> 00:00:59,000
A continuación: Olor a código: si sospechas que algún código está mal,

19
00:00:59,000 --> 00:01:02,000
o has recibido advertencias de un verificador estático, ve por él.

20
00:01:02,000 --> 00:01:04,000
Siguiente: Historia de errores.

21
00:01:04,000 --> 00:01:06,000
Si sabes que alguna parte del código

22
00:01:06,000 --> 00:01:09,000
ha recibido muchos informes de problemas últimamente,

23
00:01:09,000 --> 00:01:13,000
lo más probable es que lo que estás viendo sea otro informe de problema.

24
00:01:13,000 --> 00:01:15,000
Siguiente: Últimos cambios.

25
00:01:15,000 --> 00:01:20,000
El código que ha cambiado recientemente es mucho más probable que tenga errores.

26
00:01:20,000 --> 00:01:24,000
Así que ve por el código que ha cambiado recientemente,

27
00:01:24,000 --> 00:01:28,000
y ve por el estado que sale de este código.

28
00:01:28,000 --> 00:01:31,000
Finalmente, anomalías.

29
00:01:31,000 --> 00:01:35,000
Si algún código muestra un comportamiento anormal antes de llegar a la falla,

30
00:01:35,000 --> 00:01:39,000
por ejemplo, al producir una entrada de registro,

31
00:01:39,000 --> 00:01:41,000
síguelo también.

32
00:01:41,000 --> 00:01:45,000
De todas estas características, las infecciones son las más fuertes,

33
00:01:45,000 --> 00:01:48,000
porque son indicadores seguros de errores,

34
00:01:48,000 --> 00:01:51,000
seguidos de las causas.

35
00:01:51,000 --> 00:01:58,000
Cualquier causa implica una forma de posiblemente sortear la falla.

36
00:01:58,000 --> 00:02:01,000
En cuanto a los demás,

37
00:02:01,000 --> 00:02:05,000
dependerá de ti y del proyecto específico.

38
00:02:05,000 --> 00:02:08,000
De hecho, aquí es donde entra en juego tu conocimiento sobre

39
00:02:08,000 --> 00:02:14,000
el proyecto específico y su dominio y código.

40
00:02:14,000 --> 00:02:21,000
Ser capaz de enfocarte específicamente en las fuentes más probables de un error

41
00:02:21,000 --> 99:59:59,000
te convierte en un experto en depuración para el proyecto específico.