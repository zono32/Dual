1
00:00:00,000 --> 00:00:05,000
Cada sesión de depuración comienza con el programa que falló y que necesitamos depurar.

2
00:00:05,000 --> 00:00:09,000
Para este propósito, vamos a construir un programa simple que vamos a usar como ejemplo continuo.

3
00:00:09,000 --> 00:00:13,000
La idea aquí es escribir una función que tome una entrada HTML,

4
00:00:13,000 --> 00:00:18,000
que es texto junto con marcado HTML y devuelva solo el texto.

5
00:00:18,000 --> 00:00:24,000
Por ejemplo, si la entrada es marcado HTML para negrita seguido de texto "foo"

6
00:00:24,000 --> 00:00:28,000
seguido de marcado HTML para el final de negrita, entonces queremos devolver solo el texto.

7
00:00:28,000 --> 00:00:34,000
Todo lo que está dentro de estos corchetes angulares debe ser eliminado. ¿Cómo lidiamos con esto?

8
00:00:34,000 --> 00:00:40,000
Una forma simple es procesar la entrada HTML carácter por carácter y distinguir dos modos.

9
00:00:40,000 --> 00:00:43,000
Cuando estamos en modo etiqueta, ignoramos toda la entrada.

10
00:00:43,000 --> 00:00:48,000
Cuando estamos en modo no etiqueta, agregamos toda la entrada a la salida y cambiamos entre estos modos,

11
00:00:48,000 --> 00:00:52,000
etiqueta y no etiqueta, mirando estos corchetes angulares aquí.

12
00:00:52,000 --> 00:00:55,000
Cuando vemos el inicio de un marcado HTML

13
00:00:55,000 --> 00:00:58,000
como puedes ver en este signo menor, entramos en modo etiqueta.

14
00:00:58,000 --> 00:01:03,000
Cuando vemos el final de un marcado HTML, que es un signo mayor, salimos del modo etiqueta.

15
00:01:03,000 --> 00:01:09,000
Podemos describir el comportamiento de nuestra función, que es una máquina de estados finitos con dos estados

16
00:01:09,000 --> 00:01:14,000
modo no etiqueta que es el procesamiento de texto y modo etiqueta que es donde ignoramos el marcado HTML.

17
00:01:14,000 --> 00:01:20,000
Cuando vemos un signo menor, entramos en modo etiqueta. Cuando vemos un signo mayor, salimos del modo etiqueta.

18
00:01:20,000 --> 00:01:24,000
Para todos los demás caracteres de entrada, permanecemos en el mismo estado.

19
00:01:24,000 --> 00:01:27,000
Cuando estamos en modo no etiqueta y vemos cualquier carácter

20
00:01:27,000 --> 00:01:32,000
que no sea el inicio de un marcado HTML, agregamos este carácter a la salida.

21
00:01:32,000 --> 00:01:38,000
Mientras que en modo etiqueta, simplemente ignoramos el marcado HTML que procesamos aquí.

22
00:01:38,000 --> 00:01:44,000
Entonces, cuando estamos procesando esta entrada HTML, inicialmente estamos en modo no etiqueta.

23
00:01:44,000 --> 00:01:48,000
Ahora, vemos el inicio de un marcado HTML, entramos en modo etiqueta.

24
00:01:48,000 --> 00:01:54,000
Vemos la B, que no es el final de una etiqueta, luego obtenemos el final de la etiqueta,

25
00:01:54,000 --> 00:02:01,000
volvemos al modo no etiqueta, vemos la F, la agregamos, vemos la O, la agregamos nuevamente.

26
00:02:01,000 --> 00:02:06,000
Entonces nuestra salida ahora es "foo" y ahora nuevamente vemos el inicio de una etiqueta donde el proceso

27
00:02:06,000 --> 00:02:11,000
o más específicamente donde ignoramos todos los caracteres hasta la etiqueta de cierre

28
00:02:11,000 --> 99:59:59,000
y luego nuestra salida es de hecho el texto dentro del marcado HTML.