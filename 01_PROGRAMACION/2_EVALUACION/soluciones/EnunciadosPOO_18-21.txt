Escribe una aplicación para una biblioteca que contenga libros y revistas.
Las características comunes para las revistas y para los libros son el código, el título, y el año de publicación. Estos datos se pasarán por parámetro al crear los objetos.
Los libros tienen un atributo propio "prestado". Por defecto, al crear un libro, dicho atributo estará a false.
Las revistas tienen un atributo propio "numero". Al crear las revistas se pasa el número por parámetro.
Tanto las revistas como los libros deben tener (aparte de los constructores) un método toString() que devuelve el valor de todos los atributos en una cadena de caracteres.
También tienen un método que devuelve el año de publicación, y otro el código.
Ambas clases implementarán obligatoriamente los método prestar(), devolver(), heredados de la clase Prestable.
-------------------------------------------------
LIFO (Last In First Out)
Escribe una clase CollectionInterface, que DECLARE los siguientes métodos:

 isEmpty(): devuelve true si la colección está vacía y false en caso contrario.
 get(): devuelve y elimina el primer elemento de la colección.
 first(): devuelve el primer elemento de la colección.
 add(): añade un objeto por el extremo que corresponda, y devuelve true si se ha añadido y false en caso contrario.

 A continuación, escribe una clase Pila, que implemente esta clase, utilizando para ello un array y un contador de objetos.
-------------------------------------------------
REPASO HERENCIA:
Declara una clase Legislador que contenga como atributos:
- provinciaRepresentada (String) 
- camara
- Si es nacional o no
- años de residencia
y que también almacene los datos correspondientes a la clase Persona (atributos DNI, nombre, apellidos, edad).
En dicha clase, deberá existir un método getCamaraEnQueTrabaja común a todos los tipos de Legisladores (Senador y Diputado) aunque específico para cada tipo.
Diputado y Senador no tendrán ningún datos propio que almacenar, pero sí implementarán el método getCamaraEnQueTrabaja .
Crea una lista de legisladores y muestra por pantalla la cámara en que trabajan haciendo uso del polimorfismo.
-------------------------------------------------
Implementar un programa que gestione empleados.
Características:
 * Nombre
 * Edad
 * Salario
También existirá una constante llamada PLUS, que tendrá un valor de 300€
La clase empleado no necesitará ser instanciada.
Existen dos tipos de empleados: repartidor y comercial.
 * El comercial, aparte de los atributos anteriores, tiene uno propio llamado comisión (double).
 * El repartidor, aparte de los atributos de empleado, tiene otro propio zona (String).
Crea sus constructores, getters and setters y toString.

Las clases tendrán un método llamado plus, que según en cada clase tendrá una implementación distinta.
En comercial, si tiene más de 30 años y cobra una comisión de más de 200 euros, se le aplicará el plus.
En repartidor, si tiene menos de 25 y reparte en la “zona 3”, recibirá el plus.

Crea una clase ejecutable donde crees distintos empleados y le apliques el plus para comprobar que funciona.