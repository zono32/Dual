1
00:00:00,000 --> 00:00:03,000
Suppose you just have filled a new problem report.

2
00:00:03,000 --> 00:00:05,000
What happens next?

3
00:00:05,000 --> 00:00:07,000
In a problem database like Bugzilla,

4
00:00:07,000 --> 00:00:11,000
the problem goes through a number of stages.

5
00:00:11,000 --> 00:00:13,000
Initially the problem report is unconfirmed.

6
00:00:13,000 --> 00:00:16,000
If all the information in the problem report is valid,

7
00:00:16,000 --> 00:00:20,000
then it goes into the new state.

8
00:00:20,000 --> 00:00:26,000
A manager or the software change control board assigns the bug to an individual developer

9
00:00:26,000 --> 00:00:28,000
who now works on it.

10
00:00:28,000 --> 00:00:30,000
The developer now resolves the problem,

11
00:00:30,000 --> 00:00:35,000
and for resolving the developer can choose between multiple resolutions.

12
00:00:35,000 --> 00:00:39,000
be fixed, meaning that the problem has actually been addressed.

13
00:00:39,000 --> 00:00:42,000
The problem can be marked as a duplicate,

14
00:00:42,000 --> 00:00:46,000
meaning that the problem already exists somewhere else in the database

15
00:00:46,000 --> 00:00:50,000
and therefore possibly somebody else is already working on it.

16
00:00:50,000 --> 00:00:53,000
The problem can have a resolution of invalid,

17
00:00:53,000 --> 00:00:56,000
meaning that the problem is not a problem

18
00:00:56,000 --> 00:00:58,000
or does not contain the relevant facts.

19
00:00:58,000 --> 00:01:03,000
A resolution of won't fix means that the problem will never be fixed,

20
00:01:03,000 --> 00:01:09,000
which is a somewhat sad outcome for the one who originally submitted it.

21
00:01:09,000 --> 00:01:13,000
Then we have works for me as a resolution,

22
00:01:13,000 --> 00:01:16,000
meaning that the developer could not reproduce the problem.

23
00:01:16,000 --> 00:01:20,000
Note that if the bug report is invalid or a duplicate

24
00:01:20,000 --> 00:01:25,000
this may also be found out at an earlier stage of this,

25
00:01:25,000 --> 00:01:29,000
and the problem immediately gets resolved, of sorts.

26
00:01:29,000 --> 00:01:36,000
If the resolution is fixed, then the fix will typically be verified by the quality assurance team

27
00:01:36,000 --> 00:01:43,000
and as soon as the final product finally ships with the fix in it,

28
00:01:43,000 --> 00:01:46,000
then the bug report is marked as closed.

29
00:01:46,000 --> 00:01:49,000
In case the problem reoccurs again,

30
00:01:49,000 --> 00:01:55,000
it goes into a state of reopened and then needs to be reassigned to a developer.

31
00:01:55,000 --> 00:01:58,000
This can also happen from the resolved state.

32
00:01:58,000 --> 00:02:01,000
If additional information becomes available, for instance,

33
00:02:01,000 --> 99:59:59,000
that makes the original resolution obsolete.
