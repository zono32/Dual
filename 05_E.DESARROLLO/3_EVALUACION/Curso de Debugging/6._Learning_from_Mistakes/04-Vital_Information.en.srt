1
00:00:00,000 --> 00:00:04,000
What is this vital information that needs to go in the bug report?

2
00:00:04,000 --> 00:00:10,000
In a 2008 study involving 165 developers from Apache, Eclipse, and Mozilla,

3
00:00:10,000 --> 00:00:16,000
the most important facts the developers needed were facts about the problem.

4
00:00:16,000 --> 00:00:18,000
First, the problem history.

5
00:00:18,000 --> 00:00:21,000
That is, steps needed to reproduce the problem.

6
00:00:21,000 --> 00:00:25,000
For instance, start preview and then open the attached file.

7
00:00:25,000 --> 00:00:28,000
Second, diagnostic information.

8
00:00:28,000 --> 00:00:33,000
That is, core dumps, meaning memory dumps of the final stage of the program before it crashed,

9
00:00:33,000 --> 00:00:39,000
stack traces, the functions that were active at the moment the failure occurred, or logs.

10
00:00:39,000 --> 00:00:42,000
Whatever the system has recorded about the final state,

11
00:00:42,000 --> 00:00:44,000
and what the program has logged so far.

12
00:00:44,000 --> 00:00:47,000
Next, the experienced behavior.

13
00:00:47,000 --> 00:00:49,000
This is what the user saw.

14
00:00:49,000 --> 00:00:51,000
For instance, preview crashed.

15
00:00:51,000 --> 00:00:54,000
Next, the expected behavior.

16
00:00:54,000 --> 00:00:57,000
This is helpful as a reality check.

17
00:00:57,000 --> 00:01:01,000
Does the user expect the same as the developer?

18
00:01:01,000 --> 00:01:05,000
Mostly, this is just the opposite of the experienced behavior.

19
00:01:05,000 --> 00:01:08,000
Finally, a one-line summary.

20
00:01:08,000 --> 00:01:12,000
This is typically the base for searching for a bug report,

21
00:01:12,000 --> 00:01:16,000
as well as for deciding the severity of a problem.

22
00:01:16,000 --> 99:59:59,000
For instance, preview crashes when opening PDF file.
