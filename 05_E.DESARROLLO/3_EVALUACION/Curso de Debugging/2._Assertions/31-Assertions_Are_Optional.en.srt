1
00:00:00,000 --> 00:00:05,000
Now, for a bit of advice on assertions. First of all, assertions take time.

2
00:00:05,000 --> 00:00:09,000
If for every single operation on a large data structure, you're to reverse the anti-tree

3
00:00:09,000 --> 00:00:12,000
in order to check it for consistency,

4
00:00:12,000 --> 00:00:16,000
these operations will be no longer logarithmic time but at least linear time.

5
00:00:16,000 --> 00:00:20,000
A check on a square root result will not matter that much,

6
00:00:20,000 --> 00:00:23,000
but if you need to traverse large data structures, it will.

7
00:00:23,000 --> 00:00:26,000
This is why assertions can be turned off.

8
00:00:26,000 --> 00:00:31,000
The way assertions are being turned on and off differs from the language used.

9
00:00:31,000 --> 00:00:38,000
In Python, there is a -O option which turns assertions off. -O stands for  optimized.

10
00:00:38,000 --> 00:00:46,000
In C/C++, the compiler option -DNDEBUG for no debugging also turns assertions off.

11
00:00:46,000 --> 00:00:52,000
In Java, there is an option -ea for enable assertions which turns assertions on.

12
00:00:52,000 --> 00:00:56,000
Java special by having assertions turned off by default.

13
00:00:56,000 --> 00:01:01,000
Not very surprisingly, the assert keyword in Java is the least frequently used

14
00:01:01,000 --> 00:01:05,000
of all keywords in Java, which in my view is a big, big shame.

15
00:01:05,000 --> 00:01:10,000
The fact that assertions can be turned off and frequently will also implies that

16
00:01:10,000 --> 00:01:14,000
that assertions must not change the program semantics.

17
00:01:14,000 --> 00:01:19,000
Whether assertions are turned on or turned off, the behavior of the program should be the same.

18
00:01:19,000 --> 00:01:23,000
Suppose you're developing this cool map application,

19
00:01:23,000 --> 00:01:28,000
which also supports setting pins for individual locations.

20
00:01:28,000 --> 00:01:31,000
Now, you want to make sure that if you remove a location,

21
00:01:31,000 --> 00:01:34,000
the appropriate function returns the right value so just remove it.

22
00:01:34,000 --> 00:01:38,000
And if you're right, assert map.remove location equals to True,

23
00:01:38,000 --> 00:01:43,000
in order to make sure that remove location returns the true value that's dangerous

24
00:01:43,000 --> 00:01:49,000
because if the assertion is turned off here, then not only does the check go away

25
00:01:49,000 --> 00:01:51,000
but actually also the call to remove.

26
00:01:51,000 --> 00:01:56,000
Generally speaking, if anything in your assertion has side effects such as this one,

27
00:01:56,000 --> 00:01:59,000
don't put it into the assertion.

28
00:01:59,000 --> 00:02:05,000
What you do instead is you put the functionality into code that is outside of the assertion

29
00:02:05,000 --> 00:02:08,000
and then use the assertion only for checking  the result.

30
00:02:08,000 --> 00:02:12,000
This way if the assertion is turned off has no effect

31
00:02:12,000 --> 00:02:16,000
then the semantics of the program will still be unchanged except that the checks will be gone.
