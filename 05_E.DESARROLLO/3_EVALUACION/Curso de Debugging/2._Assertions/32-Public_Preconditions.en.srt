1
00:00:00,000 --> 00:00:05,000
Another implication is that you should not use assertions to check for public preconditions

2
00:00:05,000 --> 00:00:09,000
that are conditions that your program must check anyway

3
00:00:09,000 --> 00:00:12,000
to ensure the integrity of data coming from third party.

4
00:00:12,000 --> 00:00:17,000
As an example, if you have let say website or device, myaccount.com,

5
00:00:17,000 --> 00:00:21,000
where users can enter arbitrary amounts of data to be processed

6
00:00:21,000 --> 00:00:25,000
then do not use an assertion to check for the integrity of this data

7
00:00:25,000 --> 00:00:30,000
instead use a check that is not optional and will always remain active.

8
00:00:30,000 --> 00:00:34,000
In our example over here is something that you should not write.

9
00:00:34,000 --> 00:00:38,000
So here, we get an input, convert this into an integer, stall this, and deposit

10
00:00:38,000 --> 00:00:41,000
and then we use an assert to check this external data

11
00:00:41,000 --> 00:00:44,000
to make sure the deposit is greater or equal than 0.

12
00:00:44,000 --> 00:00:48,000
As soon as I turned the assertion off, this check will no longer be performed,

13
00:00:48,000 --> 00:00:52,000
and therefore, it would be possible to say to enter negative deposit numbers.

14
00:00:52,000 --> 00:00:54,000
What you should do instead is just a regular check.

15
00:00:54,000 --> 00:00:59,000
If you do have some invalid data here that comes from a third party raised an exception,

16
00:00:59,000 --> 00:01:02,000
a board execution popped up an error message

17
00:01:02,000 --> 99:59:59,000
or do whatever is most appropriate for the situation.
