1
00:00:00,000 --> 00:00:03,000
Here again, we do have our remove html markup function

2
00:00:03,000 --> 00:00:05,000
with the parentheses already in.

3
00:00:05,000 --> 00:00:08,000
Here is the input that doesn't work properly.

4
00:00:08,000 --> 00:00:12,000
Note the usage of a backslash in order to escape the single quote,

5
00:00:12,000 --> 00:00:14,000
which otherwise would be seen as a

6
00:00:14,000 --> 00:00:16,000
delimiter around that string.

7
00:00:16,000 --> 00:00:19,000
We can print this out to see whether it contains the right value,

8
00:00:19,000 --> 00:00:23,000
and you see it has the don't in here exactly as in our example.

9
00:00:23,000 --> 00:00:25,000
In order to address this issue,

10
00:00:25,000 --> 00:00:28,000
we need to record which quote character we actually had

11
00:00:28,000 --> 00:00:30,000
and which we need to check for again.

12
00:00:30,000 --> 00:00:33,000
For this we need to change these lines in here.

13
00:00:33,000 --> 00:00:37,000
What we're going to is, we are going to use the quote variable

14
00:00:37,000 --> 00:00:41,000
to store the quote character, you see?

15
00:00:41,000 --> 00:00:43,000
Now quote is either false

16
00:00:43,000 --> 00:00:48,000
or it contains a double quote or a single quote,

17
00:00:48,000 --> 00:00:50,000
and this makes it impressibly true.

18
00:00:50,000 --> 00:00:55,000
Now this does only work when the quote variable is false,

19
00:00:55,000 --> 00:00:57,000
and this is how we start a quoted string.

20
00:00:57,000 --> 00:00:59,000
When we see that very quote again,

21
00:00:59,000 --> 00:01:01,000
we set quote to false,

22
00:01:01,000 --> 00:01:03,000
and this is what should now finally fix

23
00:01:03,000 --> 00:01:05,000
the problem in this html input.

24
00:01:05,000 --> 00:01:07,000
Then we press run.

25
00:01:07,000 --> 00:01:10,000
And now the single quote and the double quote is properly handled,

26
00:01:10,000 --> 99:59:59,000
and what we get is just the text without the html markup.
