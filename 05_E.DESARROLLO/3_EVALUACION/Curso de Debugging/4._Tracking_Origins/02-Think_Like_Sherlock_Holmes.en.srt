1
00:00:00,000 --> 00:00:05,000
What Sherlock Holmes reconstructs in his reasoning over here

2
00:00:05,000 --> 00:00:07,000
is a cause-effect chain.

3
00:00:07,000 --> 00:00:11,000
First, Dr. Watson ran across mud;

4
00:00:11,000 --> 00:00:15,000
therefore, the servant had to clean the shoe.

5
00:00:15,000 --> 00:00:18,000
And therefore there were scratches found in the shoe.

6
00:00:18,000 --> 00:00:22,000
In debugging, we also have such a cause-effect chain:

7
00:00:22,000 --> 00:00:28,000
from the defect to the infection--that is, an error in the state--

8
00:00:28,000 --> 00:00:30,000
and finally to the failure,

9
00:00:30,000 --> 00:00:33,000
which can be observed by a user.

10
00:00:33,000 --> 00:00:36,000
The difference in the Sherlock Holmes story, however,

11
00:00:36,000 --> 00:00:41,000
is that Sherlock makes just one observation

12
00:00:41,000 --> 00:00:45,000
and deduces everything that must have happened before;

13
00:00:45,000 --> 00:00:50,000
whereas in debugging, so far, we have assumed that we can actually observe

14
00:00:50,000 --> 00:00:52,000
what has happened before in the way we assume

15
00:00:52,000 --> 00:00:55,000
that we have perfect control over our program

16
00:00:55,000 --> 00:00:58,000
and therefore can observe everything.

17
00:00:58,000 --> 00:01:01,000
But what happens if this information is not available?

18
00:01:01,000 --> 00:01:06,000
If all we know is that the failure occurred but we have no history,

19
00:01:06,000 --> 00:01:09,000
or means to observe what was going on?

20
00:01:09,000 --> 00:01:14,000
This is where the Sherlock Holmes method of debugging comes into play.

21
00:01:14,000 --> 00:01:19,000
For we must, like Sherlock Holmes, think backwards from our observations

22
00:01:19,000 --> 00:01:22,000
to find out what has really happened.

23
00:01:22,000 --> 00:01:26,000
In debugging, we start with the failure and think backwards

24
00:01:26,000 --> 99:59:59,000
what could be the possible cause such that we can finally discover the reason.
